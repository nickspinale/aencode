-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Efficient bencode parsers and serialization
--   
--   Efficient bencode parsers and serialization
@package bencode
@version 0.1.0.0

module Data.Bencode
type BDict s = Map ByteString (BValue s)
data BValue s
BString :: s -> BValue s
BInt :: Integer -> BValue s
BList :: [BValue s] -> BValue s
BDict :: (BDict s) -> BValue s
getBString :: BValue s -> Maybe s
getBInt :: BValue s -> Maybe Integer
getBList :: BValue s -> Maybe [BValue s]
getBDict :: BValue s -> Maybe (BDict s)
parseBValue :: Parser (BValue ByteString)
parseBString :: Parser ByteString
parseBInt :: Parser Integer
parseBList :: Parser [BValue ByteString]
parseBDict :: Parser (BDict ByteString)
class BEString s
lengthOf :: BEString s => s -> Integer
builder :: BEString s => s -> Builder
buildBValue :: BEString s => BValue s -> Builder
buildBString :: BEString s => s -> Builder
buildBInt :: Integer -> Builder
buildBList :: BEString s => [BValue s] -> Builder
buildBDict :: BEString s => BDict s -> Builder
type IBuilder = (Sum Integer, Builder)
prefix :: BEString s => s -> IBuilder
instance GHC.Show.Show s => GHC.Show.Show (Data.Bencode.BValue s)
instance GHC.Base.Functor Data.Bencode.BValue
instance Data.Bencode.BEString Data.ByteString.Internal.ByteString
instance Data.Bencode.BEString Data.ByteString.Lazy.Internal.ByteString
instance Data.Bencode.BEString (Data.Monoid.Sum GHC.Integer.Type.Integer, Data.ByteString.Builder.Internal.Builder)

module Data.Bencode.Lens
_BString :: Prism' (BValue a) a
_BInt :: Prism' (BValue a) Integer
_BList :: Prism' (BValue a) [BValue a]
_BDict :: Prism' (BValue a) (BDict a)
